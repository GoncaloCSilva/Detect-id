# Generated by Django 5.1.7 on 2025-06-13 11:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CareSite',
            fields=[
                ('care_site_id', models.AutoField(primary_key=True, serialize=False)),
                ('care_site_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'care_site',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdRegions',
            fields=[
                ('region_id', models.IntegerField(primary_key=True, serialize=False)),
                ('region_name', models.CharField(max_length=50)),
                ('region_color', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'hd_regions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('measurement_id', models.AutoField(primary_key=True, serialize=False)),
                ('measurement_concept_id', models.IntegerField()),
                ('value_as_number', models.FloatField()),
                ('measurement_datetime', models.DateTimeField()),
                ('range_low', models.FloatField()),
                ('range_high', models.FloatField()),
            ],
            options={
                'db_table': 'measurement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('gender_concept_id', models.IntegerField()),
                ('person_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('birthday', models.DateField()),
            ],
            options={
                'db_table': 'person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasurementExt',
            fields=[
                ('measurement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='utentes.measurement')),
                ('probability_km', models.FloatField(blank=True, null=True)),
                ('probability_rsf', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurement_ext',
                'managed': True,
            },
            bases=('utentes.measurement',),
        ),
        migrations.CreateModel(
            name='PersonExt',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='utentes.person')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('probability_km', models.FloatField(blank=True, null=True)),
                ('probability_rsf', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'person_ext',
                'managed': True,
            },
            bases=('utentes.person',),
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('observation_id', models.AutoField(primary_key=True, serialize=False)),
                ('observation_concept_id', models.IntegerField()),
                ('value_as_number', models.FloatField(blank=True, null=True)),
                ('observation_datetime', models.DateTimeField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='utentes.person')),
            ],
            options={
                'db_table': 'observation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('note_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_text', models.TextField()),
                ('note_type_concept_id', models.IntegerField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='utentes.person')),
            ],
            options={
                'db_table': 'note',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='measurement',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='utentes.person'),
        ),
        migrations.CreateModel(
            name='ConditionOccurrence',
            fields=[
                ('condition_occurrence_id', models.AutoField(primary_key=True, serialize=False)),
                ('condition_start_date', models.DateField()),
                ('condition_source_value', models.CharField(max_length=50)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='utentes.person')),
            ],
            options={
                'db_table': 'condition_occurrence',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VisitOccurrence',
            fields=[
                ('visit_occurrence_id', models.AutoField(primary_key=True, serialize=False)),
                ('visit_start_datetime', models.DateTimeField()),
                ('visit_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utentes.caresite')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='utentes.person')),
            ],
            options={
                'db_table': 'visit_occurrence',
                'managed': True,
            },
        ),
    ]
